import java.util.Scanner;
import java.io.*;
import java.io.File;
import java.io.IOException;
import java.io.FileNotFoundException;
import java.io.FileReader;


class student extends Thread
{
  public void run ()
  {
     System.out.println ("\n\n************************************");
    System.out.println ("\nNow Students classes");
    System.out.println ("\n\n************************************");
    Scanner scan = new Scanner (System.in);
      System.out.println ("Enter todays date for taking attendance: ");
    String x = scan.nextLine ();
      System.out.println ("Present Details: ");
      System.out.
      println ("Is Adarsh Present today(P for'present',A for'absent'");
    String y = scan.nextLine ();
      try
    {
      File file = new File (x);
      boolean fvar = file.createNewFile ();
      if (fvar)
	{
	  System.out.println ("");
	  System.out.
	    println ("Present details file has been created successfully");
	}

      FileWriter fw = new FileWriter (x);
      fw.write ("Adarsh" + ":" + y);

      System.out.println ("Writing successful");
      fw.close ();

    }
    catch (IOException e)
    {
      System.out.println ("Exception Occurred:");
    }
  }
}

class Parent implements Runnable
{
  public void run ()
  {
    System.out.println ("\n\n************************************");
    System.out.println ("\nNow Parents classes");
    System.out.println ("\n\n************************************");
    System.out.println ("Welcome to parents details");
    System.out.println ("Whose details u want to view('1' for Adarsh or '2' Abhishek)");
    Scanner scan = new Scanner (System.in);
    int x = scan.nextInt();
    if (x == 1)
      {
	System.out.println ("\nFathers name: G Sudarson");
	System.out.println ("Mothers name: G Manjula");
      }
    else if(x==2)
      {
	System.out.println ("\nFathers name: ishwar gupta");
	System.out.println ("Mothers name: kiran gupta");
      }
    else{
    System.out.println ("Something wrongly mentioned");
    }
  }

}

class MyException extends Exception
{
  int Experience;
  public MyException (int x)
  {
    this.Experience = x;
  }
  public String toString ()
  {
    return "\nError found : Your experience of " + Experience +
      " years is less for our institute\n";
  }
}


class Teacher
{
  int Experience;
  int id;
  String fname;
  String lname;
  public Teacher (int Experience, int id, String fname, String lname)
  {
    this.Experience = Experience;
    this.id = id;
    this.fname = fname;
    this.lname = lname;
  }
  public void read ()
  {
    System.out.println ("\nHello " + fname + " " + lname + ", your id is " +
			id + " and your have an experience of " + Experience +
			" years");
  }
}

public class Main
{
  static void compute (int a) throws MyException
  {
    if (a < 10)			//Checking experience
      throw new MyException (a);
      System.out.
      println ("\nYour have enough experience to teach in our university");
  }
  public static void main (String[]args)
  {
    Scanner scan = new Scanner (System.in);
      System.out.println ("\n\n************************************");
      System.out.println ("\nNow Teacher classes");
      System.out.println ("\n\n************************************");

      System.out.println ("Enter your first name");
    String fname = scan.nextLine ();

      System.out.println ("Enter your last name");
    String lname = scan.nextLine ();

      System.out.println ("Enter your teaching experience(in years)");
    int Experience = scan.nextInt ();

      System.out.println ("Enter your id");
    int id = scan.nextInt ();
      System.out.
      println ("\n-------------------------\nChecking teaching experience");
      try
    {
      compute (Experience);
    } catch (MyException ex1)
    {
      System.out.println (ex1);
    }

    System.out.println ("\n-------------------------\nCreating file");
    try
    {
      File file = new File ("file.txt");
      boolean fvar = file.createNewFile ();
      if (fvar)
	{
	  System.out.println ("");
	  System.out.println ("File has been created successfully");
	}

      FileWriter fw = new FileWriter ("file.txt");
      fw.write (fname + ":" + lname + ":" + Experience + ":" + id);

      System.out.println ("Writing successful");
      fw.close ();

    }
    catch (IOException e)
    {
      System.out.println ("Exception Occurred:");
    }
    System.out.println ("\n-------------------------\nWhile reading\n");
    //for reading
    try
    {
      FileReader fr = null;
      fr = new FileReader ("file.txt");
      int ch;
      while ((ch = fr.read ()) != -1)
	{
	  if (ch == 58)
	    {
	      System.out.println (" ");
	      continue;
	    }
	  System.out.print ((char) ch);
	}
    }
    catch (IOException e)
    {
      System.out.println ("Exception Occured");
    }
    //using of finally
    finally
    {
      System.out.println ("\n-------------------------");
      System.out.println ("\nWelcome to the SRM family");
    }

    Teacher key = new Teacher (Experience, id, fname, lname);
    key.read ();
    
    student t1 = new student ();
    Parent m1 = new Parent ();
    Thread t2 = new Thread (m1);
    try{
        t1.start();

        t1.join(); // signals t2 to wait
        if( !t1.isAlive()) {
            t2.start();// if t1 is finished then t2 will start
        }
    }
    catch(Exception e){
        
    }
  }
}

